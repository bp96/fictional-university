!function(c,t,e){function a(t,e){return function(){return parseFloat(this.attributes[t])}}function i(t,e){return function(t){return parseFloat(parseFloat(t).toFixed(e))}}var o,n=t.options,r=t.i18n,l=e.osm={},s=Backbone.Model.extend({get:function(t){return _.isFunction(this.getters[t])?this.getters[t].call(this):Backbone.Model.prototype.get.call(this,t)},set:function(t,e,a){var i,o;for(o in _.isObject(t)||null==t?(i=t,a=e):(i={})[t]=e,a=a||{},i)_.isFunction(this.setters[o])&&(i[o]=this.setters[o].call(this,i[o],a));return Backbone.Model.prototype.set.call(this,i,a)},getters:{},setters:{}});l.MarkerData=s.extend({getters:{lat:a("lat",n.accuracy),lng:a("lng",n.accuracy)},setters:{lat:i(0,n.accuracy),lng:i(0,n.accuracy)},isDefaultLabel:function(){return this.get("label")===this.get("default_label")}}),l.MarkerCollection=Backbone.Collection.extend({model:l.MarkerData}),l.MapData=s.extend({getters:{lat:a("lat",n.accuracy),lng:a("lng",n.accuracy),zoom:(o="zoom",function(){return parseInt(this.attributes[o])})},setters:{lat:i(0,n.accuracy),lng:i(0,n.accuracy),zoom:function(t){return parseInt(t)}},initialize:function(t){this.set("markers",new l.MarkerCollection(t.markers)),s.prototype.initialize.apply(this,arguments)}}),l.MarkerEntry=wp.Backbone.View.extend({tagName:"div",className:"osm-marker",template:wp.template("osm-marker-input"),events:{'click [data-name="locate-marker"]':"locate_marker",'click [data-name="remove-marker"]':"remove_marker",'change [data-name="label"]':"update_marker_label"},initialize:function(t){return wp.media.View.prototype.initialize.apply(this,arguments),this.marker=t.marker,(this.marker.osm_controller=this).model=t.model,this.listenTo(this.model,"change:label",this.changedLabel),this.listenTo(this.model,"change:default_label",this.changedDefaultLabel),this.listenTo(this.model,"change:lat",this.changedlatLng),this.listenTo(this.model,"change:lng",this.changedlatLng),this.listenTo(this.model,"destroy",this.remove),this.render()},changedLabel:function(){var t=this.model.get("label");this.$('[data-name="label"]').val(t).trigger("change"),this.marker.unbindTooltip(),this.marker.bindTooltip(t),this.marker.options.title=t,c(this.marker._icon).attr("title",t)},changedDefaultLabel:function(){this.model.get("label")===this.model.previous("default_label")&&this.model.set("label",this.model.get("default_label"))},changedlatLng:function(){this.marker.setLatLng({lat:this.model.get("lat"),lng:this.model.get("lng")})},render:function(){wp.media.View.prototype.render.apply(this,arguments);var e=this;return this.$el.find('[data-name="label"]').on("focus",function(t){e.hilite_marker()}).on("blur",function(t){e.lolite_marker()}).val(this.model.get("label")).trigger("change"),c(this.marker._icon).on("focus",function(t){e.hilite_marker()}).on("blur",function(t){e.lolite_marker()}),this},update_marker_label:function(t){var e=c(t.target).val();return""===e&&(e=this.model.get("default_label")),this.model.set("label",e),this},update_marker_geocode:function(t){return this.model.isDefaultLabel()&&this.set_marker_label(t),this.$el.find('[id$="-marker-geocode"]').val(t).trigger("change"),this._update_values_from_marker(),this},_update_values_from_marker:function(){var t=this.marker.getLatLng();return this.model.set("lat",t.lat),this.model.set("lng",t.lng),this.model.set("label",this.marker.options.title),this},hilite_marker:function(t){this.$el.addClass("focus"),c(this.marker._icon).addClass("focus")},lolite_marker:function(t){this.$el.removeClass("focus"),c(this.marker._icon).removeClass("focus")},locate_marker:function(){return this.marker._map.flyTo(this.marker.getLatLng()),this},remove_marker:function(t){return t.preventDefault(),this.model.destroy(),this},pling:function(){c(this.marker._icon).html("").append('<span class="pling"></span>')}}),l.Field=Backbone.View.extend({map:null,field:null,geocoder:null,locator:null,visible:null,$parent:function(){return this.$el.closest(".acf-field-settings,.acf-field-open-street-map")},$value:function(){return this.$parent().find("input.osm-json")},$results:function(){return this.$parent().find(".osm-results")},$markers:function(){return this.$parent().find(".osm-markers")},preventDefault:function(t){t.preventDefault()},initialize:function(t){var e=this,a=this.getMapData();return this.config=this.$el.data().editorConfig,this.map=t.map,this.field=t.field,this.model=new l.MapData(a),this.plingMarker=!1,this.init_locator_add(),this.init_locator(),0!==this.config.max_markers&&this.init_fit_bounds(),this.init_acf(),this.config.allow_providers&&(this.$el.on("acf-osm-map-create-layers",this.preventDefault),this.initLayers()),this.$el.on("acf-osm-map-create-markers",this.preventDefault),e.$markers().html(""),this.initMarkers(),this.listenTo(this.model,"change",this.updateValue),this.listenTo(this.model.get("markers"),"add",this.addMarker),this.listenTo(this.model.get("markers"),"add",this.updateValue),this.listenTo(this.model.get("markers"),"remove",this.updateValue),this.listenTo(this.model.get("markers"),"change",this.updateValue),this.map.on("zoomend",function(){e.model.set("zoom",e.map.getZoom())}),this.map.on("moveend",function(){var t=e.map.getCenter();e.model.set("lat",t.lat),e.model.set("lng",t.lng)}),this.update_visible(),this.update_map(),this.map.keyboard.disable(),acf.addAction("remount_field/type=open_street_map",function(t){e.field===t&&e.map.invalidateSize()}),this},init_fit_bounds:function(){var a=this;this.fitBoundsControl=new L.Control.FitBoundsControl({position:"bottomright",callback:function(){var t=a.model.get("markers"),e=L.latLngBounds();0!==t.length&&(t.forEach(function(t){e.extend(L.latLng(t.get("lat"),t.get("lng")))}),a.map.fitBounds(e))}}).addTo(this.map)},init_locator_add:function(){var t=this;this.locatorAdd=new L.Control.AddLocationMarker({position:"bottomleft",callback:function(){"true"===t.$el.attr("data-can-add-marker")&&t.currentLocation&&t.addMarkerByLatLng(t.currentLocation),t.locator.stop()}}).addTo(this.map)},init_locator:function(){var e=this;this.currentLocation=!1,this.locator=new L.control.locate({position:"bottomleft",icon:"dashicons dashicons-location-alt",iconLoading:"spinner is-active",flyTo:!0,strings:{title:r.my_location},onLocationError:function(t){}}).addTo(this.map),this.map.on("locationfound",function(t){e.currentLocation=t.latlng,setTimeout(function(){e.locator.stopFollowing(),c(e.locator._icon).removeClass("dashicons-warning")},1)}),this.map.on("locationerror",function(t){e.currentLocation=!1,setTimeout(function(){c(e.locator._icon).addClass("dashicons-warning")},1)})},getMapData:function(){var t=JSON.parse(this.$value().val());return t.lat=t.lat||this.$el.attr("data-map-lat"),t.lng=t.lng||this.$el.attr("data-map-lng"),t.zoom=t.zoom||this.$el.attr("data-map-zoom"),t},updateValue:function(){this.$value().val(JSON.stringify(this.model.toJSON())).trigger("change"),this.updateMarkerState()},updateMarkerState:function(){var t=this.model.get("markers").length;this.$el.attr("data-has-markers",t?"true":"false"),this.$el.attr("data-can-add-marker",!1===this.config.max_markers||t<this.config.max_markers?"true":"false")},addMarker:function(a,t){var i=this,e=L.marker({lat:a.get("lat"),lng:a.get("lng")},{title:a.get("label"),icon:this.icon,draggable:!0}).bindTooltip(a.get("label")),o=new l.MarkerEntry({controller:this,marker:e,model:a});this.map.once("layeradd",function(t){e.on("click",function(t){a.destroy()}).on("dragend",function(t){var e=this.getLatLng();a.set("lat",e.lat),a.set("lng",e.lng),i.reverseGeocode(a)}),o.$el.appendTo(i.$markers())}),a.on("destroy",function(){e.remove()}),e.addTo(this.map),this.plingMarker&&o.pling()},initMarkers:function(){var e=this;this.initGeocode(),this.$el.attr("data-has-markers","false"),this.$el.attr("data-can-add-marker","false"),0!==this.config.max_markers&&(this.icon=new L.DivIcon({html:"",className:"osm-marker-icon"}),this.model.get("markers").forEach(function(t){e.addMarker(t)}),L.Browser.touch&&L.Browser.mobile?this._add_marker_on_hold():this._add_marker_on_dblclick(),this.updateMarkerState())},_add_marker_on_dblclick:function(){var a=this;this.map.on("dblclick",function(t){var e=t.latlng;L.DomEvent.preventDefault(t),L.DomEvent.stopPropagation(t),a.addMarkerByLatLng(e)}).doubleClickZoom.disable(),this.$el.addClass("add-marker-on-dblclick")},_add_marker_on_hold:function(){L.Browser.pointer?this._add_marker_on_hold_pointer():this._add_marker_on_hold_touch(),this.$el.addClass("add-marker-on-taphold")},_add_marker_on_hold_pointer:function(){var i=this,o={};L.DomEvent.on(this.map.getContainer(),"pointerdown",function(a){o["p"+a.pointerId]=setTimeout(function(){var t=i.map.mouseEventToContainerPoint(a),e=i.map.containerPointToLayerPoint(t);i.addMarkerByLatLng(i.map.layerPointToLatLng(e)),o["p"+a.pointerId]=!1},750)}).on(this.map.getContainer(),"pointerup pointermove",function(t){o["p"+t.pointerId]&&clearTimeout(o["p"+t.pointerId])})},_add_marker_on_hold_touch:function(){var i=this,o=!1;L.DomEvent.on(this.map.getContainer(),"touchstart",function(a){1===a.touches.length&&(o=setTimeout(function(){var t=i.map.mouseEventToContainerPoint(a.touches[0]),e=i.map.containerPointToLayerPoint(t);i.addMarkerByLatLng(i.map.layerPointToLatLng(e)),o=!1},750))}).on(this.map.getContainer(),"touchend touchmove",function(t){o&&clearTimeout(o["p"+t.pointerId])})},addMarkerByLatLng:function(t){var e,a=this.model.get("markers");!1!==this.config.max_markers&&a.length>=this.config.max_markers||(e=new l.MarkerData({label:"",default_label:"",lat:t.lat,lng:t.lng}),this.plingMarker=!0,a.add(e),this.reverseGeocode(e))},initGeocode:function(){var n=this,t=this.$el.prev();t.is(".acf-osm-above")?t.html(""):t=c('<div class="acf-osm-above"></div>').insertBefore(this.$el),this.map._controlCorners.above=t.get(0),this.geocoder=L.Control.geocoder({collapsed:!1,position:"above",placeholder:r.search,errorMessage:r.nothing_found,showResultIcons:!0,suggestMinLength:3,suggestTimeout:250,queryMinLength:3,defaultMarkGeocode:!1,geocoder:L.Control.Geocoder.nominatim({htmlTemplate:function(t){var e=[],a={interpolate:/\{(.+?)\}/g},i=_.defaults(t.address,{building:"",road:"",house_number:"",postcode:"",city:"",town:"",village:"",hamlet:"",state:"",country:""});return e.push(_.template(r.address_format.street,a)(i)),e.push(_.template(r.address_format.city,a)(i)),e.push(_.template(r.address_format.country,a)(i)),e.map(function(t){return t.replace(/\s+/g," ").trim()}).filter(function(t){return""!==t}).join(", ")}})}).on("markgeocode",function(t){var e=t.geocode.center,a=n.model.get("markers").length,i=n.parseGeocodeResult([t.geocode],e),o={label:i,default_label:i,lat:e.lat,lng:e.lng};if(n.geocoder._clearResults(),n.geocoder._input.value="",0===n.config.max_markers)return n.map.fitBounds(t.geocode.bbox);!1===n.config.max_markers||a<n.config.max_markers?n.model.get("markers").add(o):1===n.config.max_markers&&n.model.get("markers").at(0).set(o),n.map.setView(e,n.map.getZoom())}).addTo(this.map)},reverseGeocode:function(e){var a=this,i={lat:e.get("lat"),lng:e.get("lng")};this.geocoder.options.geocoder.reverse(i,a.map.getZoom(),function(t){e.set("default_label",a.parseGeocodeResult(t,i))})},parseGeocodeResult:function(t,e){var a=!1;return t.length?c.each(t,function(t,e){a=e.html}):a=e.lat+", "+e.lng,a},initLayers:function(){var o=this,n=[],r={},l={},s=function(t,e){var a,i;if(_.isObject(t))return c.each(t,s);if(null!==(i=e)&&(!o.config.restrict_providers||-1!==o.config.restrict_providers.indexOf(i))){try{a=L.tileLayer.provider(e)}catch(t){return}a.providerKey=e,o.layer_is_overlay(e,a)?l[e]=a:r[e]=a,-1!==n.indexOf(e)&&o.map.addLayer(a)}},n=this.model.get("layers");!1!==this.config.restrict_providers&&_.isArray(this.config.restrict_providers)&&(n=n.filter(function(t){return-1!==o.config.restrict_providers.indexOf(t)})),n.length||(n=this.config.restrict_providers.slice(0,1)),this.map.on("baselayerchange layeradd layerremove",function(t){var e;t.layer.providerKey&&(e=[],o.map.eachLayer(function(t){t.providerKey&&(o.layer_is_overlay(t.providerKey,t)?e.push(t.providerKey):e.unshift(t.providerKey))}),o.model.set("layers",e))}),c.each(this.config.restrict_providers,s),this.layersControl=L.control.layers(r,l,{collapsed:!0,hideSingleBase:!0}).addTo(this.map)},layer_is_overlay:function(t,e){if(e.options.opacity&&e.options.opacity<1)return!0;var a=["^(OpenWeatherMap|OpenSeaMap)","OpenMapSurfer.(Hybrid|AdminBounds|ContourLines|Hillshade|ElementsAtRisk)","HikeBike.HillShading","Stamen.(Toner|Terrain)(Hybrid|Lines|Labels)","TomTom.(Hybrid|Labels)","Hydda.RoadsAndLabels","^JusticeMap","OpenPtMap","OpenRailwayMap","OpenFireMap","SafeCast","OnlyLabels","HERE(v3?).trafficFlow","HERE(v3?).mapLabels"].join("|");return null!==t.match("("+a+")")},resetLayers:function(){this.map.eachLayer(function(t){t.constructor===L.TileLayer.Provider&&t.remove()}),this.layersControl&&this.layersControl.remove()},update_visible:function(){return this.visible===this.$el.is(":visible")||(this.visible=this.$el.is(":visible"),this.visible&&this.map.invalidateSize()),this},init_acf:function(){function t(){e.update_visible()}var e=this;acf.addAction("show",t),acf.addAction("hide",t),c(document).on("postbox-toggled",t),c(document).on("click",".widget-top *",t)},update_map:function(){var t={lat:this.model.get("lat"),lng:this.model.get("lng")};this.map.setView(t,this.model.get("zoom"))}}),c(document).on("acf-osm-map-create",function(t){L.Control.AddLocationMarker||(L.Control.AddLocationMarker=L.Control.extend({onAdd:function(){return this._container=L.DomUtil.create("div","leaflet-control-add-location-marker leaflet-bar leaflet-control"),this._link=L.DomUtil.create("a","leaflet-bar-part leaflet-bar-part-single",this._container),this._link.title=r.add_marker_at_location,this._icon=L.DomUtil.create("span","dashicons dashicons-location",this._link),L.DomEvent.on(this._link,"click",L.DomEvent.stopPropagation).on(this._link,"click",L.DomEvent.preventDefault).on(this._link,"click",this.options.callback,this).on(this._link,"dblclick",L.DomEvent.stopPropagation),this._container},onRemove:function(){L.DomEvent.off(this._link,"click",L.DomEvent.stopPropagation).off(this._link,"click",L.DomEvent.preventDefault).off(this._link,"click",this.options.callback,this).off(this._link,"dblclick",L.DomEvent.stopPropagation)}})),L.Control.FitBoundsControl||(L.Control.FitBoundsControl=L.Control.extend({onAdd:function(){return this._container=L.DomUtil.create("div","leaflet-control-fit-bounds leaflet-bar leaflet-control"),this._link=L.DomUtil.create("a","leaflet-bar-part leaflet-bar-part-single",this._container),this._link.title=r.fit_markers_in_view,this._icon=L.DomUtil.create("span","dashicons dashicons-editor-expand",this._link),L.DomEvent.on(this._link,"click",L.DomEvent.stopPropagation).on(this._link,"click",L.DomEvent.preventDefault).on(this._link,"click",this.options.callback,this).on(this._link,"dblclick",L.DomEvent.stopPropagation),this._container},onRemove:function(){L.DomEvent.off(this._link,"click",L.DomEvent.stopPropagation).off(this._link,"click",L.DomEvent.preventDefault).off(this._link,"click",this.options.callback,this).off(this._link,"dblclick",L.DomEvent.stopPropagation)}})),c(t.target).closest('[data-id="acfcloneindex"]').length&&t.preventDefault()}).on("acf-osm-map-init",function(e,a){var t;c(e.target).is("[data-editor-config]")&&(!function t(){return c(e.target).is(":visible")?void a.invalidateSize():setTimeout(t,250)}(),t=new l.Field({el:e.target,map:a,field:acf.getField(c(e.target).closest(".acf-field"))}),c(e.target).data("_map_editor",t))}),acf.addAction("append",function(){c.acf_leaflet()}),acf.addAction("show_field",function(t){"open_street_map"===t.type&&t.$el.find("[data-editor-config]").data("_map_editor").update_visible()})}(jQuery,acf_osm_admin,window);